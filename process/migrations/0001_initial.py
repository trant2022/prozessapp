# Generated by Django 5.2.3 on 2025-07-03 18:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Gerätetyp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Gerätetyp')),
            ],
            options={
                'verbose_name': 'Gerätetyp',
                'verbose_name_plural': 'Gerätetypen',
            },
        ),
        migrations.CreateModel(
            name='Kunde',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Kunde')),
            ],
            options={
                'verbose_name': 'Kunde',
                'verbose_name_plural': 'Kunden',
            },
        ),
        migrations.CreateModel(
            name='Lieferant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nummer', models.CharField(max_length=50, unique=True, verbose_name='Lieferantennummer')),
                ('name', models.CharField(max_length=200, verbose_name='Lieferant')),
            ],
            options={
                'verbose_name': 'Lieferant',
                'verbose_name_plural': 'Lieferanten',
            },
        ),
        migrations.CreateModel(
            name='Gerätemodell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Modellbezeichnung')),
                ('typ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modelle', to='process.gerätetyp', verbose_name='Gerätetyp')),
            ],
            options={
                'verbose_name': 'Gerätemodell',
                'verbose_name_plural': 'Gerätemodelle',
                'unique_together': {('typ', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Auftrag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auftragsnummer', models.CharField(max_length=100, unique=True, verbose_name='Auftragsnummer')),
                ('auftragsart', models.CharField(choices=[('BROKER', 'Broker'), ('RETAIL', 'Retail'), ('MARKETPLACE', 'Marktplatz')], max_length=20, verbose_name='Auftragsart')),
                ('nettopreis_fw', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Nettopreis Fremdwährung')),
                ('waehrung', models.CharField(max_length=10, verbose_name='Währung')),
                ('logistikkosten_fw', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Logistikkosten Fremdwährung')),
                ('wechselkurs', models.DecimalField(decimal_places=6, max_digits=12, verbose_name='Wechselkurs')),
                ('nettopreis_chf', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=12, null=True, verbose_name='Nettopreis CHF')),
                ('gesamtmenge', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Gesamtmenge')),
                ('reservierte_menge', models.PositiveIntegerField(verbose_name='Reservierte Menge')),
                ('menge_retail', models.PositiveIntegerField(verbose_name='Menge Retail')),
                ('menge_broker', models.PositiveIntegerField(verbose_name='Menge Broker')),
                ('menge_marktplatz', models.PositiveIntegerField(verbose_name='Menge Marktplatz')),
                ('bestelldatum', models.DateField(verbose_name='Bestelldatum')),
                ('lieferdatum', models.DateField(blank=True, null=True, verbose_name='Erwartetes Lieferdatum')),
                ('sicherung_moeglich', models.BooleanField(verbose_name='Securaze möglich')),
                ('datensatz_erhalten', models.BooleanField(default=False, verbose_name='Datensatz erhalten')),
                ('datensatz_importiert', models.BooleanField(default=False, verbose_name='Datensatz importiert')),
                ('test_noetig', models.BooleanField(verbose_name='Test erforderlich')),
                ('reinigung', models.CharField(choices=[('NO', 'Nein'), ('MINIMAL', 'Ja, minimal'), ('FULL', 'Ja, voll')], max_length=20, verbose_name='Reinigung')),
                ('loeschmethode', models.CharField(choices=[('NO', 'Nein'), ('SMART_ERASURE', 'Smart Erasure'), ('DATA_CLEAR', 'Data Clear')], max_length=20, verbose_name='Löschmethode')),
                ('verpackung', models.CharField(choices=[('LARGE_BOX', 'Grosskarton'), ('FOLDING_BOX', 'Faltkarton')], max_length=50, verbose_name='Verpackung')),
                ('verkaufspreis_netto', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Verkaufspreis netto')),
                ('braendi_noetig', models.BooleanField(verbose_name='Brändi nötig')),
                ('braendi_benachrichtigt', models.DateField(blank=True, null=True, verbose_name='Brändi benachrichtigt')),
                ('braendi_geliefert', models.DateField(blank=True, null=True, verbose_name='Brändi geliefert')),
                ('braendi_abgeholt', models.DateField(blank=True, null=True, verbose_name='Brändi abgeholt')),
                ('kunde', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='process.kunde', verbose_name='Kunde')),
                ('lieferant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='process.lieferant', verbose_name='Lieferant')),
            ],
            options={
                'verbose_name': 'Auftrag',
                'verbose_name_plural': 'Aufträge',
            },
        ),
        migrations.CreateModel(
            name='Auftragsposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('positionsnummer', models.PositiveIntegerField(verbose_name='Positionsnummer')),
                ('farbe', models.CharField(max_length=50, verbose_name='Farbe')),
                ('speicher', models.CharField(max_length=50, verbose_name='Speicher')),
                ('ram', models.CharField(max_length=50, verbose_name='RAM')),
                ('prozessor', models.CharField(max_length=100, verbose_name='Prozessor')),
                ('zustand', models.CharField(max_length=100, verbose_name='Zustand')),
                ('menge', models.PositiveIntegerField(verbose_name='Menge')),
                ('auftrag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positionen', to='process.auftrag', verbose_name='Auftrag')),
                ('geraetemodell', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='process.gerätemodell', verbose_name='Gerätemodell')),
                ('geraetetyp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='process.gerätetyp', verbose_name='Gerätetyp')),
            ],
            options={
                'verbose_name': 'Auftragsposition',
                'verbose_name_plural': 'Auftragspositionen',
                'ordering': ['positionsnummer'],
                'unique_together': {('auftrag', 'positionsnummer')},
            },
        ),
    ]
